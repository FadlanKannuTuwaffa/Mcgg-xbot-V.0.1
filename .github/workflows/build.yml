name: Build Signed APK (MCGG-Xbot)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install base packages (git, java, wget, unzip)
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget unzip zip build-essential ccache \
            libffi-dev libssl-dev libsqlite3-dev libjpeg-dev libpng-dev zlib1g-dev \
            openjdk-17-jdk python3-dev libsndfile1 libopenblas-dev

      - name: Install Android SDK (cmdline-tools) into Buildozer path and accept licenses
        run: |
          set -e
          SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$SDK_ROOT"
          cd "$SDK_ROOT"

          # download command-line tools (will create cmdline-tools)
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d cmdline-tools
          # move to expected layout: cmdline-tools/latest
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true

          export ANDROID_SDK_ROOT="$SDK_ROOT"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"

          # accept licenses and install required packages (stable build-tools that include aidl)
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-33" "build-tools;33.0.2"

          # persist env for later steps
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Install Buildozer & python deps (optional heavy deps)
        run: |
          pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.36
          # If you want OCR (heavy) keep these; otherwise comment them to make build faster
          pip install torch==1.13.1+cpu torchvision==0.14.1+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html || true
          pip install easyocr pillow || true

      - name: Decode keystore from secrets
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > mcgg-release-key.jks
        shell: bash

      - name: Build signed release APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          P4A_RELEASE_KEYSTORE: ${{ github.workspace }}/mcgg-release-key.jks
          P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.KEYSTORE_PASSWORD }}
          P4A_RELEASE_KEYALIAS: ${{ secrets.KEY_ALIAS }}
          P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.KEY_PASSWORD }}
        run: |
          # print some debug info (can be removed later)
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
          which aidl || echo "aidl not found in PATH"
          ls -la $ANDROID_SDK_ROOT || true
          buildozer -v android release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcgg-xbot-signed
          path: bin/*.apk
