name: Build Signed APK (MCGG-Xbot)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget unzip zip openjdk-17-jdk build-essential ccache \
            libffi-dev libssl-dev libsqlite3-dev libjpeg-dev libpng-dev zlib1g-dev \
            python3-dev libsndfile1 libopenblas-dev

      - name: Install Android command-line tools into Buildozer SDK path
        run: |
          set -e
          SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$SDK_ROOT"
          cd "$SDK_ROOT"

          # download command-line tools (Google)
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d cmdline-tools_tmp

          # move to expected layout cmdline-tools/latest
          mkdir -p cmdline-tools/latest
          # the zip may contain a folder named 'cmdline-tools', move its contents into latest
          if [ -d cmdline-tools_tmp/cmdline-tools ]; then
            mv cmdline-tools_tmp/cmdline-tools/* cmdline-tools/latest/ || true
          else
            mv cmdline-tools_tmp/* cmdline-tools/latest/ || true
          fi
          rm -rf cmdline-tools_tmp cmdline-tools.zip

          # create legacy tools path so Buildozer (and some scripts) can find sdkmanager at <sdk>/tools/bin/sdkmanager
          mkdir -p tools/bin
          # copy binaries to tools/bin (this ensures older path exists)
          cp -r cmdline-tools/latest/* tools/bin/ || true

          # ensure sdkmanager is callable
          export PATH="$SDK_ROOT/cmdline-tools/latest/bin:$SDK_ROOT/tools/bin:$SDK_ROOT/platform-tools:$PATH"

          # accept licenses and install core packages (stable build-tools that include aidl)
          yes | "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" --licenses
          "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" "platform-tools" "platforms;android-33" "build-tools;33.0.2"

          # persist env and paths for following steps
          echo "ANDROID_SDK_ROOT=$SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$SDK_ROOT" >> $GITHUB_ENV
          echo "$SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$SDK_ROOT/tools/bin" >> $GITHUB_PATH
          echo "$SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Install Buildozer & Python packages
        run: |
          pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.36
          # OPTIONAL (heavy) - comment out if you want faster debug builds:
          # pip install torch==1.13.1+cpu torchvision==0.14.1+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
          # pip install easyocr pillow

      - name: Decode keystore from secret
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -e
          echo "$KEYSTORE_BASE64" | base64 --decode > mcgg-release-key.jks
          ls -la mcgg-release-key.jks

      - name: Build signed release APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          P4A_RELEASE_KEYSTORE: ${{ github.workspace }}/mcgg-release-key.jks
          P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.KEYSTORE_PASSWORD }}
          P4A_RELEASE_KEYALIAS: ${{ secrets.KEY_ALIAS }}
          P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -e
          # debug helpers (safe)
          echo "Android SDK root: $ANDROID_SDK_ROOT"
          echo "Which sdkmanager: $(which sdkmanager || echo 'not found')"
          echo "Which aidl: $(which aidl || echo 'not found')"
          echo "Build-tools folder:"
          ls -la "$ANDROID_SDK_ROOT/build-tools" || true
          # run buildozer (release, signed via P4A env)
          buildozer -v android release

      - name: Upload signed APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcgg-xbot-signed
          path: bin/*.apk
