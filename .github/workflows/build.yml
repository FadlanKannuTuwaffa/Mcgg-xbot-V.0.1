name: Build Signed APK (MCGG-Xbot)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git ccache libffi-dev libssl-dev \
            libsqlite3-dev libjpeg-dev libpng-dev zlib1g-dev openjdk-17-jdk unzip python3-dev \
            libsndfile1 libopenblas-dev wget curl zip

      - name: Prepare Android SDK location (Buildozer path) and install cmdline-tools
        run: |
          set -e
          SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$SDK_ROOT"
          cd "$SDK_ROOT"

          # download command-line tools (handle zip layout variations)
          TMPZIP="cmdline-tools.zip"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O $TMPZIP
          rm -rf cmdline-tools-tmp
          mkdir -p cmdline-tools-tmp
          unzip -q $TMPZIP -d cmdline-tools-tmp
          rm -f $TMPZIP

          # normalize to cmdline-tools/latest
          mkdir -p cmdline-tools/latest
          if [ -d cmdline-tools-tmp/cmdline-tools ]; then
            mv cmdline-tools-tmp/cmdline-tools/* cmdline-tools/latest/ || true
          else
            mv cmdline-tools-tmp/* cmdline-tools/latest/ || true
          fi
          rm -rf cmdline-tools-tmp

          # create legacy tools/bin so older lookups work
          mkdir -p tools/bin
          cp -r cmdline-tools/latest/* tools/bin/ || true

          # export PATH for this step (we will also persist for other steps)
          export PATH="$SDK_ROOT/cmdline-tools/latest/bin:$SDK_ROOT/tools/bin:$SDK_ROOT/platform-tools:$PATH"

          # accept licenses and install stable platform + build-tools
          yes | "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" --licenses
          "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2"

          # debug listing
          echo "SDK_ROOT: $SDK_ROOT"
          ls -la "$SDK_ROOT/build-tools" || true
          ls -la "$SDK_ROOT/cmdline-tools/latest/bin" || true

          # persist env and PATH for following steps
          echo "ANDROID_SDK_ROOT=$SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$SDK_ROOT" >> $GITHUB_ENV
          echo "$SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$SDK_ROOT/tools/bin" >> $GITHUB_PATH
          echo "$SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Install buildozer & python deps (optional heavy deps commented)
        run: |
          python -m pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.36
          # If you want OCR (heavy) enable these lines later:
          # pip install torch==1.13.1+cpu torchvision==0.14.1+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
          # pip install easyocr pillow

      - name: Decode keystore from secret
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > mcgg-release-key.jks
          chmod 600 mcgg-release-key.jks
          ls -la mcgg-release-key.jks

      - name: Build signed release APK
        env:
          # signing info from repo secrets (keystore file path set via P4A vars)
          P4A_RELEASE_KEYSTORE: ${{ github.workspace }}/mcgg-release-key.jks
          P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.KEYSTORE_PASSWORD }}
          P4A_RELEASE_KEYALIAS: ${{ secrets.KEY_ALIAS }}
          P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -e
          # ensure SDK env is set in this shell (GITHUB_ENV should have set it)
          export ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/33.0.2:$PATH"

          echo "Debug: which sdkmanager -> $(which sdkmanager || echo 'none')"
          echo "Debug: which aidl -> $(which aidl || echo 'none')"
          echo "Debug: build-tools folder:"
          ls -la "$ANDROID_SDK_ROOT/build-tools" || true

          # run buildozer (release signed via P4A env)
          buildozer -v android release

      - name: Upload signed APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcgg-xbot-signed
          path: bin/*.apk
